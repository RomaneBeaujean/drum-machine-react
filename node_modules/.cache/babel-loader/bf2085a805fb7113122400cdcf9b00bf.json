{"ast":null,"code":"var _jsxFileName = \"/Users/francoisbeaujean/App/react/drum-machine-react/src/DrumMachine.jsx\";\nimport React from 'react';\nimport DrumPad from './Components/DrumPad';\nimport audioBank from './Components/audioBank';\nimport { Howl } from \"howler\";\n\nclass DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = e => {\n      console.log(this.state.drumPad.indexOf(e.key.toUpperCase())); // if (this.state.drumPad.indexOf(e.key)) {\n      //     const url = [...audioBank].filter((sound) => sound.pad === e.key)[0].url;\n      //     this.soundPlay(url);\n      // };\n    };\n\n    this.drumPadClick = pad => {\n      const url = [...audioBank].filter(sound => sound.pad === pad)[0].url;\n      this.soundPlay(url);\n    };\n\n    this.soundPlay = src => {\n      const sound = new Howl({\n        src,\n        html5: true\n      });\n      sound.play();\n    };\n\n    this.state = {\n      drumPad: ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C']\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.state.drumPad.map(pad => {\n      return /*#__PURE__*/React.createElement(DrumPad, {\n        key: pad,\n        pad: pad,\n        onClick: this.drumPadClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }\n      });\n    }));\n  }\n\n}\n\n;\nexport default DrumMachine;","map":{"version":3,"sources":["/Users/francoisbeaujean/App/react/drum-machine-react/src/DrumMachine.jsx"],"names":["React","DrumPad","audioBank","Howl","DrumMachine","Component","constructor","props","handleKeyPress","e","console","log","state","drumPad","indexOf","key","toUpperCase","drumPadClick","pad","url","filter","sound","soundPlay","src","html5","play","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAelBC,cAfkB,GAeAC,CAAD,IAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2BL,CAAC,CAACM,GAAF,CAAMC,WAAN,EAA3B,CAAZ,EADoB,CAEpB;AACA;AACA;AACA;AACH,KArBiB;;AAAA,SAuBlBC,YAvBkB,GAuBFC,GAAD,IAAS;AACpB,YAAMC,GAAG,GAAG,CAAC,GAAGjB,SAAJ,EAAekB,MAAf,CAAuBC,KAAD,IAAWA,KAAK,CAACH,GAAN,KAAcA,GAA/C,EAAoD,CAApD,EAAuDC,GAAnE;AACA,WAAKG,SAAL,CAAeH,GAAf;AACH,KA1BiB;;AAAA,SA4BlBG,SA5BkB,GA4BLC,GAAD,IAAS;AACjB,YAAMF,KAAK,GAAG,IAAIlB,IAAJ,CAAU;AACpBoB,QAAAA,GADoB;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAV,CAAd;AAIAH,MAAAA,KAAK,CAACI,IAAN;AACH,KAlCiB;;AAEd,SAAKb,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC;AADA,KAAb;AAGH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKpB,cAA1C;AACH;;AAEDqB,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKtB,cAA7C;AACH;;AAuBDuB,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWC,OAAX,CAAmBmB,GAAnB,CAAwBd,GAAD,IAAS;AAC7B,0BAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,GAAd;AAAmB,QAAA,GAAG,EAAEA,GAAxB;AAA6B,QAAA,OAAO,EAAE,KAAKD,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CADA;AAMH;;AA5CqC;;AA6CzC;AAED,eAAeb,WAAf","sourcesContent":["import React from 'react';\nimport DrumPad from './Components/DrumPad';\nimport audioBank from './Components/audioBank';\nimport {Howl} from \"howler\";\n\nclass DrumMachine extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            drumPad: ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'],\n        };\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    };\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPress);\n    };\n\n    handleKeyPress = (e) => {\n        console.log(this.state.drumPad.indexOf(e.key.toUpperCase()))\n        // if (this.state.drumPad.indexOf(e.key)) {\n        //     const url = [...audioBank].filter((sound) => sound.pad === e.key)[0].url;\n        //     this.soundPlay(url);\n        // };\n    };\n\n    drumPadClick = (pad) => {\n        const url = [...audioBank].filter((sound) => sound.pad === pad)[0].url;\n        this.soundPlay(url);\n    }; \n\n    soundPlay = (src) => {\n        const sound = new Howl ({\n            src,\n            html5: true\n        });\n        sound.play()\n    }\n\n    render(){\n        return (\n        <div id=\"display\">\n            {this.state.drumPad.map((pad) => {\n                return <DrumPad key={pad} pad={pad} onClick={this.drumPadClick}/>\n            })}\n        </div>)\n    }\n};\n\nexport default DrumMachine;"]},"metadata":{},"sourceType":"module"}